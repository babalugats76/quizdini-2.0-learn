@import './variables.scss';

/*-------------------
  Splash
--------------------*/

#splash {
  display: flex;
  flex-direction: column;
  border-radius: 10px;
  overflow: hidden;
  background-color: white;
  color: $logo-black;
  min-height: 300px;
  max-height: 80vh;

  #splash-banner {
    flex: 0 0 auto;
    .game-banner {
      width: 100%;
      height: auto;
      padding: 0;
      margin: 0;
    }
  }

  #splash-details {
    flex: 0 1 auto;
    background-color: rgba(255, 255, 255, 0.3);
    padding: 1.5em 1.3em;
    line-height: 1.3;
    overflow-y: auto;
    .title {
      max-width: 15ch;
      margin: auto;
      font-size: 2.6em;
      line-height: 1;
      font-family: $marcher;
    }
    .author,
    #options,
    .instructions {
      color: $black-alpha6;
    }
    .author {
      font-size: 1.1em;
      padding: 0.75em 0;
    }
    #options {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      padding: 0.5em;
      color: $black-alpha6;
      span {
        display: flex;
        flex: 1 1 auto;
        justify-content: center;
        align-items: center;
        padding: 0.5em 0.3em;
        font-size: 1.1em;
        .icon {
          width: 1.3em;
          height: 1.3em;
          margin-right: 0.3em;
          path {
            fill: $black-alpha6;
          }
        }
      }
    }
    #score {
      font-weight: bold;
      font-size: 4em;
      margin: 0.167em;
      .circle {
        display: inline-block;
        line-height: 0px;
        border-radius: 2000px;
        border: 0.1em solid $black-alpha4;
        background-color: $bright-green;
        padding: 0.25em;
        min-width: 1.67em;
        .circle-text {
          display: inline-block;
          padding-top: 50%;
          padding-bottom: 50%;
          margin: auto;
          color: $white;
          font-family: $helsinki;
        }
      }
    }
  }
  #splash-footer {
    flex: 0 0 auto;
    padding: 1.5em 0.75em;
    background-color: $cadet-grey;
    button#play {
      width: 100%;
      max-width: 20em;
      background-color: $red;
      color: $white;
      font-family: $helsinki;
      font-size: 1.5em;
      padding: 0.3em 0.5em;
      border-radius: 10px;
      border: none;
      outline: none;
      transition: background-color 500ms ease-in-out;
      text-transform: uppercase;
      letter-spacing: 1px;
      &:hover {
        background-color: yellow;
       // transition: background-color 500ms ease;
      }
      &:focus {
        background-color: green;
      //  transition: background-color 500ms ease;
      }
      &:active {
        background-color: blue;
       // transition: background-color 500ms ease;
      }
    }
  }
}

/*-------------------
  Timer
--------------------*/

#timer {
  position: fixed;
  width: 6em;
  height: 6em;
  bottom: 1em;
  right: 1em;
  z-index: 200;
}

.progress-bar-wrapper {
  position: absolute;
}

.timer-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.timer {
  width: 100%;
}

.timer .timer-path {
  stroke: $white;
  stroke-linecap: square;
}

.timer .timer-trail {
  transition: stroke 1s ease-in-out;
}

.timer .timer-background {
  fill: $black-alpha4;
}

.timer-score-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  height: 100%;
  width: 100%;
}

#timer-score {
  color: $white;
  font-family: $helsinki;
  font-weight: bold;
  font-size: 3em;
  letter-spacing: 2px;
  transition: width 1s ease-in-out;
}

/*-------------------
  Match
--------------------*/

#match-game {
  display: grid;
  grid-area: auto;
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  width: 100%;
  height: 100%;
  /*max-width: 1920px;*/
  margin: 0 auto;
  padding: 0;
  overflow: auto;
}

#match-board {
  display: grid;
  grid-area: auto;
  width: 100%;
}

.term,
.definition,
.term-preview {
  z-index: 102;
  box-shadow: 0 0.4em 0.8em $black-alpha1, 0 0.3em 0.6em $black-alpha2;
  border-collapse: separate;
}

.term,
.term-preview {
  background-color: $quizdini-blue;
  color: white;
  border-radius: 0.2em;
  cursor: move;
}

.term-preview {
  background-color: $yellow;
  color: $logo-black;
  opacity: 0.5;
}

.term {
  /* Colors for tiles */
  $tileColors: (
    ('red', $red, $white, $white),
    ('orange', $orange, $white, $white),
    ('yellow', $yellow, $graphite, $white),
    ('lime', $lime, $graphite, $white),
    ('green', $green, $white, $white),
    ('cyan', $cyan, $graphite, $white),
    ('blue', $blue, $white, $white),
    ('purple', $purple, $white, $white),
    ('magenta', $magenta, $white, $white),
    ('gray', $gray, $white, $white),
    ('navy', $navy, $white, $white),
    ('teal', $teal, $white, $white)
  );

  @each $color, $background, $textColor, $borderColor in $tileColors {
    &.#{$color} {
      background-color: #{$background};
      color: #{$textColor};
    }
    &.#{$color}:hover,
    &.#{$color}.dragging {
      /*border: 2px solid $borderColor;*/
    }
    &.#{$color}.dragging {
      /* If dragging need be styled */
    }
  }

  &.dragging {
    /* If dragging need be styled */
  }

  &.term:hover {
    box-shadow: 0 0.5em 1em $black-alpha1, 0 0.375em 0.375em $black-alpha2;
    border-collapse: separate;
  }

  &.matched {
    background-color: $white !important;
    border-color: $bright-green !important;
    > .term-text {
      color: $bright-green !important;
      text-shadow: none !important;
    }
  }
}

.definition {
  border-radius: 0.2em;
  background-color: $gray-light-light;
  touch-action: none;
  background-color: $logo-white;

  &.is-over {
    background-color: $quizdini-blue !important;
    opacity: 0.6 !important;
    > .definition-text {
      color: white !important;
      text-shadow: none !important;
    }
  }

  &.matched {
    background-color: $white !important;
    background-image: unset;
    border-color: $bright-green !important;
    > .definition-text {
      color: $bright-green !important;
      text-shadow: none !important;
    }
  }
}

.term-text,
.definition-text,
.term-preview-text {
  font-family: $lexenddeca;
  span {
    font-family: $lexenddeca;
  }
  code,
  kbd,
  samp,
  pre,
  sup,
  sub {
    font-family: $firacode;
  }
}

.definition-text {
  color: rgba(33, 33, 33, 0.95);
  font-family: $lexenddeca;
}

#terms {
  background-color: $quizdini-turquoise;
}

#definitions {
  background-color: orange;
}

/* mobile-ish breakpoint */
@media screen and (max-width: 47.99em) {
  #match-game, .term-preview {
    font-size: 87.5%;
    font-size: calc(0.8125rem + ((1vw - 0.2em) * 0.2232));
  }
  #match-board {
    /* 1 column */
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }
  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    text-align: center;
    justify-content: center;
    align-content: center;
  }

  .term,
  .definition {
    flex: 0 0 auto;
    height: 2.33em;
    min-width: 93px;
    max-width: calc(100vw - 0.6em);
    margin: 0.3em;
    padding: 0.4em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    align-items: center;
    justify-items: center;
    align-self: center;
    justify-self: center;
    overflow: hidden;
  }

  .term-preview {
    display: 'inline-block';
    height: 2.33em;
    min-width: 93px;
    max-width: calc(
      100vw - 0.6em
    ); // cap the width (just in case `fit-content` is not supported
    margin: 0.3em;
    padding: 0.4em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    width: fit-content;
  }

  .term-text,
  .definition-text,
  .term-preview-text {
    width: 100%;
  }

  @supports (-webkit-line-clamp: 1) {
    .term-text,
    .definition-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 1;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .term-text,
  .term-preview-text {
    font-size: 1em;
    margin-top: 0;
    font-weight: normal;
    letter-spacing: 1px;
  }
  .definition-text {
    font-size: 0.9em;
    margin-top: 0.1em;
  }
}

/* Tabletish */
@media screen and (min-width: 48em) and (max-width: 74.99em) {
  /* Dynamically scale font */
  #match-game,
  .term-preview {
    font-size: 95%; // For browsers which don't support calc()
    /* 0.875em(14px) @ 48em(768px) increasing to 1em(16px) @ 75em(1200px) */
    font-size: calc(0.875rem + ((1vw - 0.48em) * 0.463));
  }

  #match-board {
    /* 1 column - terms and definitions on top of each other */
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    align-content: center;
    justify-content: center;
    &.tiles-4 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 1.8em) / 2);
        /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 3.6em) / 4);
      }
    }
    &.tiles-6 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 2.2em) / 3);
        /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 3.6em) / 4);
      }
    }
    &.tiles-9 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 2.2em) / 3);
        /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 4.4em) / 6);
      }
    }
  }

  .term,
  .definition,
  .term-preview {
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: inherit;
    min-height: 4.67em;
    margin: 0.2em;
    padding: 0.6em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    overflow: hidden;
  }

  .term-text,
  .definition-text,
  .term-preview-text {
    margin: auto;
  }

  @supports (-webkit-line-clamp: 4) {
    .term-text,
    .definition-text,
    .term-preview-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 2;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .term-text,
  .term-preview-text {
    font-size: 1.4em;
    font-weight: normal;
    word-break: break-word;
    letter-spacing: 1px;
  }

  .definition-text {
    font-size: 1.3em;
  }

  .term-preview {
    z-index: 151;
    min-height: 4.67em;
    &.tiles-4 {
      /* (100% parent - (hor. cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((100% - 2.8em) / 2);
      /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 3.6em) / 4);
    }
    &.tiles-6 {
      /* (100% parent - (hor. cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((100% - 3.2em) / 3);
      /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 3.6em) / 4);
    }
    &.tiles-9 {
      /* (100% parent - (hor. cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((100% - 3.2em) / 3);
      /* (90% vh - (vert. cont. padding * 4) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 4.4em) / 6);
    }
  }
}

@media screen and (min-width: 75em) {
  /* Dynamically scale font */
  #match-game,
  .term-preview {
    font-size: 110%; // For browsers which don't support calc()
    /* 1em(16px) @ 75em(1200px) increasing to 2.5em(40px) @ 240em(3840px) */
    font-size: calc(1rem + ((1vw - 0.75em) * 0.9091));
  }

  #match-board {
    /* 2 columns, i.e., 2 side-by-side boards */
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;
  }

  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    align-content: center;
    justify-content: center;
    &.tiles-4 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 1.8em) / 2);
        /* (90% vh - (vert. cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 1.8em) / 2);
      }
    }
    &.tiles-6 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 2.2em) / 3);
        /* (90% vh - (vert. cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 1.8em) / 2);
      }
    }
    &.tiles-9 {
      .term,
      .definition {
        /* (100% parent - (hor. cont. padding * 2) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
        flex-basis: calc((100% - 2.2em) / 3);
        /* (90% vh - (vert. cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
        height: calc((90vh - 2.2em) / 3);
      }
    }
  }

  .term,
  .definition,
  .term-preview {
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: inherit;
    min-height: 9.33em;
    margin: 0.2em;
    padding: 0.6em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    overflow: hidden;
  }

  .term-text,
  .definition-text,
  .term-preview-text {
    margin: auto;
  }

  @supports (-webkit-line-clamp: 4) {
    .term-text,
    .definition-text,
    .term-preview-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 4;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .term-text,
  .term-preview-text {
    font-size: 1.4em;
    font-weight: normal;
    word-break: break-word;
    letter-spacing: 1px;
  }

  .definition-text {
    font-size: 1.3em;
  }

  .term-preview {
    z-index: 151;
    min-height: 9.33em;
    &.tiles-4 {
      /* (50% parent - (hor. inner cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((50% - 2.8em) / 2);
      /* (90% vh - (vert. inner cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 1.8em) / 2);
    }
    &.tiles-6 {
      /* (50% parent - (hor. inner cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((50% - 3.2em) / 3);
      /* (90% vh - (vert. inner cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 1.8em) / 2);
    }
    &.tiles-9 {
      /* (50% parent - (hor. inner cont. padding * 4) - ((tile hor. margin * 2) * tiles per row) / tiles per row) */
      width: calc((50% - 3.2em) / 3);
      /* (90% vh - (vert. inner cont. padding * 2) - ((tile vert. margin * 2) * tiles per col) / tiles per col) */
      height: calc((90vh - 2.2em) / 3);
    }
  }

  /*#timer {
    width: 6em;
    height: 6em;
    #timer-score {
      font-size: 3em;
    }
  }*/
}
