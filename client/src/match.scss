@import './variables.scss';

/*-------------------
  Splash
--------------------*/

#splash {
  display: flex;
  flex-direction: column;
  border-radius: 10px;
  overflow: hidden;
  background-color: white;
  color: #343434;

  #splash-banner {
    .game-banner {
      width: 100%;
      height: auto;
      padding: 0;
      margin: 0;
    }
  }

  #splash-details {
    background-color: rgba(255, 255, 255, 0.3);
    margin: 1em 0;
    padding: 0 1.3em;
    line-height: 1.3;
    .title {
      font-family: $cabin;
      font-weight: bold;
      font-size: 2.4em;
      padding-bottom: 0.2em;
    }
    .author,
    #options,
    .instructions {
      color: #777;
    }
    .author {
      font-size: 1.1em;
      padding-bottom: 0.5em;
    }
    #options {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      padding: 0.5em 0;
    }
    #score {
      font-weight: bold;
      font-size: 4em;
      margin: 0.2em;
      .circle {
        display: inline-block;
        line-height: 0px;
        border-radius: 50%;
        border: 0.1em solid $black-alpha4;
        background-color: $bright-green;
        padding: 0.2em;
        .circle-text {
          display: inline-block;
          padding-top: 50%;
          padding-bottom: 50%;
          margin-left: 0.3em;
          margin-right: 0.3em;
          color: $white;
          font-family: $cabin;
        }
      }
    }
  }
  #splash-footer {
    padding: 0.75em;
    background-color: $cadet-grey;
    color: $white;
    button#play {
      background-color: $gray-light-light;
      font-family: $cabin;
      font-weight: bold;
      font-size: 1.5em;
      padding: 0.3em 0.5em;
      border-radius: 10px;
      transition: background-color 300ms linear;
      text-transform: uppercase;
      letter-spacing: 1px;
      width: 100%;
      max-width: 20em;
      &:focus,
      &:hover,
      &:active {
        background-color: $red;
        color: $white;
      }
    }
  }
}

/*-------------------
  Timer
--------------------*/

#timer {
  position: fixed;
  width: 5em;
  height: 5em;
  bottom: 1em;
  right: 1em;
  z-index: 200;
}

.progress-bar-wrapper {
  position: absolute;
}

.timer-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.timer {
  width: 100%;
}

.timer .timer-path {
  stroke: $white;
  stroke-linecap: square;
}

.timer .timer-trail {
  transition: stroke 1s ease-in-out;
}

.timer .timer-background {
  fill: $black-alpha4;
}

.timer-score-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  height: 100%;
  width: 100%;
}

#timer-score {
  color: $white;
  font-family: $cabin;
  font-weight: bold;
  font-size: 2em;
  letter-spacing: 2px;
  transition: width 1s ease-in-out;
}

/*-------------------
  Match
--------------------*/

#match-game {
  display: grid;
  grid-area: auto;
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  width: 100%;
  height: 100%;
  max-width: 1920px;
  margin: 0 auto;
  padding: 0;
  /*background-color: $imperial;*/
  overflow: auto;
}

#match-board {
  display: grid;
  grid-area: auto;
  width: 100%;
}

.term,
.definition,
.term-preview {
  z-index: 102;
  box-shadow: 0 0.4em 0.8em $black-alpha1, 0 0.3em 0.6em $black-alpha2;
  border-collapse: separate;
}

.term,
.term-preview {
  background-color: $quizdini-blue;
  color: white;
  border-radius: 0.2em;
  cursor: move;
}

.term-preview {
  opacity: 0.5;
}

.term {
  /* Colors for tiles */
  $tileColors: (
    ('red', $red, $white, $white),
    ('orange', $orange, $white, $white),
    ('yellow', $yellow, $graphite, $white),
    ('lime', $lime, $graphite, $white),
    ('green', $green, $white, $white),
    ('cyan', $cyan, $graphite, $white),
    ('blue', $blue, $white, $white),
    ('purple', $purple, $white, $white),
    ('magenta', $magenta, $white, $white),
    ('gray', $gray, $white, $white),
    ('navy', $navy, $white, $white),
    ('teal', $teal, $white, $white)
  );

  @each $color, $background, $textColor, $borderColor in $tileColors {
    &.#{$color} {
      background-color: #{$background};
      color: #{$textColor};
    }
    &.#{$color}:hover,
    &.#{$color}.dragging {
      border: 2px solid $borderColor;
    }
    &.#{$color}.dragging {
      /* If dragging need be styled */
    }
  }

  &.dragging {
    /* If dragging need be styled */
  }

  &.term:hover {
    box-shadow: 0 0.5em 1em $black-alpha1, 0 0.375em 0.375em $black-alpha2;
    border-collapse: separate;
  }

  &.matched {
    background-color: $white !important;
    border-color: $bright-green !important;
    > .term-text {
      color: $bright-green !important;
      text-shadow: none !important;
    }
  }
}

.definition {
  border-radius: 0.2em;
  background-color: $gray-light-light;
  touch-action: none;
  background-color: $logo-white;
  background-image: linear-gradient(
      90deg,
      transparent 23px,
      $lined-paper-red 23px,
      $lined-paper-red 25px,
      transparent 25px
    ),
    linear-gradient($lined-paper-blue 2px, transparent 2px);
  background-size: 100% 2em;

  &.is-over {
    background-image: unset;
    background-color: $quizdini-blue !important;
    opacity: 0.6 !important;
    > .definition-text {
      color: white !important;
      text-shadow: none !important;
    }
  }

  &.matched {
    background-color: $white !important;
    background-image: unset;
    border-color: $bright-green !important;
    > .definition-text {
      color: $bright-green !important;
      text-shadow: none !important;
    }
  }
}

.term-text,
.definition-text,
.term-preview-text {
  font-family: $lexenddeca;
  span {
    font-family: $lexenddeca;
  }
  code,
  pre,
  sup,
  sub {
    /* Obviously, change this to something better, but the hook is in... */
    font-family: 'Fira Code', monospace !important;
  }
}

.definition-text {
  color: rgba(33, 33, 33, 0.95);
  font-family: $lexenddeca;
}

#terms {
  background-color: $quizdini-turquoise;
}

#definitions {
  background-color: orange;
}

/* mobile-ish breakpoint */
@media screen and (max-width: 47.99em) {
  #match-game {
    font-size: 90%;
  }
  #match-board {
    /* 1 column */
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }
  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    text-align: center;
    justify-content: center;
    align-content: center;
  }

  .term,
  .definition {
    flex: 0 0 auto;
    height: 2.33em;
    min-width: 93px;
    max-width: calc(100vw - 0.6em);
    margin: 0.3em;
    padding: 0.4em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    align-items: center;
    justify-items: center;
    align-self: center;
    justify-self: center;
    overflow: hidden;
  }

  .term-preview {
    display: 'inline-block';
    height: 2.33em;
    min-width: 93px;
    max-width: calc(
      100vw - 0.6em
    ); // cap the width (just in case `fit-content` is not supported
    margin: 0.3em;
    padding: 0.4em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    width: fit-content;
  }

  .term-text,
  .definition-text,
  .term-preview-text {
    width: 100%;
  }

  @supports (-webkit-line-clamp: 1) {
    .term-text,
    .definition-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 1;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .term-text,
  .term-preview-text {
    font-size: 1em;
    margin-top: 0;
    font-weight: normal;
    letter-spacing: 1px;
  }
  .definition-text {
    font-size: 0.9em;
    margin-top: 0.1em;
  }
}

@media screen and (min-width: 48em) and (max-width: 74.99em) {
  #match-game {
    font-size: 100%;
  }

  .term-preview {
    z-index: 151;
    height: 4.67em;
    &.tiles-4,
    &.tiles-6 {
      width: calc(50% - (0.25em + 0.8em));
    }
    &.tiles-9 {
      width: calc(33% - (0.167em + 0.8em));
    }
  }

  #match-board {
    /* 1 column - terms and definitions on top of each other */
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    align-content: center;
    justify-content: center;
    &.tiles-4,
    &.tiles-6 {
      .term,
      .definition {
        flex-basis: calc(50% - (0.25em + 0.4em));
      }
    }
    &.tiles-9 {
      .term,
      .definition {
        flex-basis: calc(33% - (0.167em + 0.4em));
      }
    }
  }
  .term,
  .definition,
  .term-preview {
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: inherit;
    height: 4.67em;
    margin: 0.2em;
    padding: 0.6em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    overflow: hidden;
  }
  .term-text,
  .definition-text,
  .term-preview-text {
    margin: auto;
  }
  @supports (-webkit-line-clamp: 4) {
    .term-text,
    .definition-text,
    .term-preview-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 2;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
  .term-text,
  .term-preview-text {
    font-size: 1.4em;
    font-weight: normal;
    word-break: break-word;
    letter-spacing: 1px;
  }
  .definition-text {
    font-size: 1.3em;
  }
}

@media screen and (min-width: 75em) {
  #match-game {
    font-size: 110%;
  }

  .term-preview {
    z-index: 151;
    height: 9.33em;
    &.tiles-4,
    &.tiles-6 {
      width: calc((50% / 2) - (0.25em + 0.8em));
    }
    &.tiles-9 {
      width: calc((33% / 2) - (0.167em + 0.8em));
    }
  }

  #match-board {
    /* 2 columns, i.e., 2 side-by-side boards */
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;
  }
  #terms,
  #definitions {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    padding: 0.5em;
    margin: 0 auto;
    align-content: center;
    justify-content: center;
    &.tiles-4,
    &.tiles-6 {
      .term,
      .definition {
        flex-basis: calc(50% - (0.25em + 0.4em));
      }
    }
    &.tiles-9 {
      .term,
      .definition {
        flex-basis: calc(33% - (0.167em + 0.4em));
      }
    }
  }

  .term,
  .definition,
  .term-preview {
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: inherit;
    height: 9.33em;
    margin: 0.2em;
    padding: 0.6em;
    border-radius: 0.5em;
    line-height: 1.4;
    text-align: center;
    overflow: hidden;
  }

  .term-text,
  .definition-text,
  .term-preview-text {
    margin: auto;
  }

  @supports (-webkit-line-clamp: 4) {
    .term-text,
    .definition-text,
    .term-preview-text {
      display: -webkit-box;
      width: 100%;
      -webkit-line-clamp: 4;
      /* autoprefixer: ignore next */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .term-text,
  .term-preview-text {
    font-size: 1.4em;
    font-weight: normal;
    word-break: break-word;
    letter-spacing: 1px;
  }
  .definition-text {
    font-size: 1.3em;
  }
  #timer {
    width: 8em;
    height: 8em;
    #timer-score {
      font-size: 4em;
    }
  }
}
